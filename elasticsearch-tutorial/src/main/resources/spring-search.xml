<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:application.properties"/>

    <context:component-scan base-package="com.holddie.springboot.elasticsearch.tutorial"/>

    <!-- can have different search client for indexing & searching -->
    <bean id="searchClient" class="com.holddie.springboot.elasticsearch.tutorial.search.utils.SearchClient">
        <property name="serverConfiguration" ref="serverConfiguration"/>
    </bean>

    <!-- Server configuration -->
    <bean id="serverConfiguration"
          class="com.holddie.springboot.elasticsearch.tutorial.search.utils.ServerConfiguration">
        <property name="clusterName" value="${es.clusterName}"/>
        <!-- local (embedded version, will create new indexes in the working directory)
            or remote (requires existing server) -->
        <property name="mode" value="remote"/>
        <!-- those properties are used when configured for remote -->
        <property name="clusterHost" value="${es.host1}"/>
        <property name="clusterPort" value="${es.port1}"/>
    </bean>

    <bean id="searchDelegate"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.delegate.SearchDelegateImpl">
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="searchWorkflow"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.workflow.SearchWorkflow">
        <property name="searchFlow">
            <list>
                <bean id="search"
                      class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.SearchWorkerImpl"/>
            </list>
        </property>
        <property name="searchKeywordWorkflow">
            <list>
                <bean id="searchKeyword"
                      class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.KeywordSearchWorkerImpl"/>
            </list>
        </property>
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="indexWorkflow"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.workflow.IndexWorkflow">
        <property name="indexWorkflow">
            <list>
                <ref bean="index"/>
                <ref bean="keyword"/>
            </list>
        </property>
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="deleteWorkflow"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.workflow.DeleteObjectWorkflow">
        <property name="deleteObjectWorkflow">
            <list>
                <bean id="deleteObject"
                      class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.DeleteObjectImpl"/>
                <ref bean="deleteKeywords"/>
            </list>
        </property>
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="getWorkflow"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.workflow.GetWorkflow">
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="importWorkflow"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.workflow.ImportWorkflow">
        <property name="searchClient" ref="searchClient"/>
    </bean>

    <bean id="deleteKeywords"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.DeleteKeywordsImpl">
        <property name="indexConfigurations">
            <list>
                <ref bean="goods_keywordindex"/>
            </list>
        </property>
    </bean>

    <!-- create indice  -->
    <bean id="index"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.ObjectIndexerImpl">
        <property name="indexConfigurations">
            <list>
                <ref bean="goods_indexConfig"/>
            </list>
        </property>
    </bean>

    <!-- load index configuration -->
    <bean id="goods_indexConfig"
          class="com.holddie.springboot.elasticsearch.tutorial.search.utils.IndexConfiguration">
        <property name="indiceName" value="scaffold"/>
        <property name="typeName" value="goods"/>
        <property name="mappingFileName" value="config/search/indice_mappings_goods.json"/>
        <property name="settingsFileName" value="config/search/indice_settings_cn.json"/>
    </bean>

    <!-- create keyword indice  -->
    <bean id="keyword"
          class="com.holddie.springboot.elasticsearch.tutorial.search.services.worker.KeywordIndexerImpl">
        <property name="indexConfigurations">
            <list>
                <ref bean="goods_keywordindex"/>
            </list>
        </property>
    </bean>

    <bean id="goods_keywordindex"
          class="com.holddie.springboot.elasticsearch.tutorial.search.utils.CustomIndexConfiguration">
        <property name="typeName" value="keyword_goods"/>
        <property name="onType" value="goods"/>
        <property name="fields">
            <list>
                <ref bean="field1"/>
                <ref bean="field2"/>
            </list>
        </property>
    </bean>


    <!-- supported field types List, Integer, Double, Boolean, String -->
    <bean id="field1"
          class="com.holddie.springboot.elasticsearch.tutorial.search.utils.CustomIndexFieldConfiguration">
        <property name="fieldName" value="name"/>
        <property name="fieldType" value="String"/>
    </bean>

    <bean id="field2"
          class="com.holddie.springboot.elasticsearch.tutorial.search.utils.CustomIndexFieldConfiguration">
        <property name="fieldName" value="sn"/>
        <property name="fieldType" value="String"/>
    </bean>


</beans>